FORMAT: 1A
HOST: http://teapot-staging.cfapps.io

# Teapot
**Teapot API** is an API for [Tiego](http://github.com/luan/tiego) to manage on demand docker workstations.

## Errors

The **Teapot API** has a limited number of simple error codes that apply to all of its requests:

 - `404 Not Found`: Any request that didn't match a route or a resource
 - `400 Bad Request`: Any validation error or request with an invalid body (i.e. invalid *JSON*)
 - `401 Unauthorized`: Fail to authenticate the request
 - `502 Bad Gateway`: Fail to connect to the receptor

# Group Workstations
Workstations are the base resource of the **Teapot API**
    
## Workstations Collection [/workstations]

### List all Workstations [GET]
+ Response 200 (application/json)

        [{
          "name": "trusty", "docker_image": "docker:///ubuntu#trusty", "state": "RUNNING"
        }, {
          "name": "wheezy", "docker_image": "docker:///debian#wheezy", "state": "STOPPED"
        }]

### Create a Workstation [POST]

+ Parameters
    + name (required, string, `golang`) ... Unique `name` of the Workstation
    + docker_image = `docker:///ubuntu#trusty` (optional, string, `docker:///debian#wheezy`) ... Docker image to be used **must be availabe on _hub.docker.com_**

+ Request (application/json)

        { "name": "golang", "docker_image": "docker:///golang#1.3.3" }

+ Response 201 (application/json)

        { "name": "golang", "docker_image": "docker:///golang#1.3.3" }

## Workstation [/workstations/{name}]
A single Workstation object with all its details

+ Parameters
    + name (required, string, `golang`) ... `name` of the Workstation to perform action with. Has example value.

### Retrieve a Workstation [GET]
+ Response 200 (application/json)

    + Body

            { "name": "golang", "docker_image": "docker:///golang#1.3.3", "state": "RUNNING" }

### Remove a Workstation [DELETE]
+ Response 204

